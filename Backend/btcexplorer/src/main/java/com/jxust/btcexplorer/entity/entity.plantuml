@startuml

title __ENTITY's Class Diagram__\n

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.BaseEntity {
            - error : Object
            - id : long
            + getError()
            + getId()
            + getResult()
            + setError()
            + setId()
            + setResult()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.Bip {
            - active : boolean
            - height : long
            - type : String
            + getHeight()
            + getType()
            + isActive()
            + setActive()
            + setHeight()
            + setType()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.BipDetail {
            - min_activation_height : long
            - since : int
            - start_time : long
            - status : String
            - timeout : long
            + getMin_activation_height()
            + getSince()
            + getStart_time()
            + getStatus()
            + getTimeout()
            + setMin_activation_height()
            + setSince()
            + setStart_time()
            + setStatus()
            + setTimeout()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.Block {
            - bits : String
            - chainwork : String
            - confirmations : int
            - difficulty : int
            - hash : String
            - height : int
            - mediantime : long
            - merkleroot : String
            - nTx : int
            - nextblockhash : String
            - nonce : long
            - size : int
            - strippedsize : int
            - time : long
            - tx : String[]
            - version : int
            - versionHex : String
            - weight : int
            + getBits()
            + getChainwork()
            + getConfirmations()
            + getDifficulty()
            + getHash()
            + getHeight()
            + getMediantime()
            + getMerkleroot()
            + getNextblockhash()
            + getNonce()
            + getSize()
            + getStrippedsize()
            + getTime()
            + getTx()
            + getVersion()
            + getVersionHex()
            + getWeight()
            + getnTx()
            + setBits()
            + setChainwork()
            + setConfirmations()
            + setDifficulty()
            + setHash()
            + setHeight()
            + setMediantime()
            + setMerkleroot()
            + setNextblockhash()
            + setNonce()
            + setSize()
            + setStrippedsize()
            + setTime()
            + setTx()
            + setVersion()
            + setVersionHex()
            + setWeight()
            + setnTx()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.BlockChainInfo {
            - bestblockhash : String
            - blocks : int
            - chain : String
            - chainwork : String
            - difficulty : double
            - headers : int
            - initialblockdownload : boolean
            - mediantime : long
            - pruned : boolean
            - size_on_disk : long
            - verificationprogress : double
            - warnings : String
            + getBestblockhash()
            + getBlocks()
            + getChain()
            + getChainwork()
            + getDifficulty()
            + getHeaders()
            + getMediantime()
            + getSize_on_disk()
            + getSoftforks()
            + getVerificationprogress()
            + getWarnings()
            + getbip65()
            + isInitialblockdownload()
            + isPruned()
            + setBestblockhash()
            + setBlocks()
            + setChain()
            + setChainwork()
            + setDifficulty()
            + setHeaders()
            + setInitialblockdownload()
            + setMediantime()
            + setPruned()
            + setSize_on_disk()
            + setSoftforks()
            + setVerificationprogress()
            + setWarnings()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.BlockInfo {
            - error : Object
            - id : long
            + getError()
            + getId()
            + getResult()
            + setError()
            + setId()
            + setResult()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.ChainTips {
            - branchlen : int
            - hash : String
            - height : int
            - status : String
            + getBranchlen()
            + getHash()
            + getHeight()
            + getStatus()
            + setBranchlen()
            + setHash()
            + setHeight()
            + setStatus()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.Difficulty {
            - error : Object
            - id : long
            - result : double
            + getError()
            + getId()
            + getResult()
            + setError()
            + setId()
            + setResult()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.MemPool {
            - bytes : int
            - loaded : boolean
            - maxmempool : int
            - mempoolminfee : float
            - minrelaytxfee : float
            - size : int
            - unbroadcastcount : int
            - usage : int
            + getBytes()
            + getMaxmempool()
            + getMempoolminfee()
            + getMinrelaytxfee()
            + getSize()
            + getUnbroadcastcount()
            + getUsage()
            + isLoaded()
            + setBytes()
            + setLoaded()
            + setMaxmempool()
            + setMempoolminfee()
            + setMinrelaytxfee()
            + setSize()
            + setUnbroadcastcount()
            + setUsage()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.RPCInfo {
            - active_commands : JSONArray
            - logpath : String
            + getActive_commands()
            + getLogpath()
            + setActive_commands()
            + setLogpath()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.Softforks {
            + getBip34()
            + getBip65()
            + getBip66()
            + getCsv()
            + getSegwit()
            + getTaproot()
            + setBip34()
            + setBip65()
            + setBip66()
            + setCsv()
            + setSegwit()
            + setTaproot()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.TapRoot {
            - active : boolean
            - type : String
            + getBip9()
            + getType()
            + isActive()
            + setActive()
            + setBip9()
            + setType()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.ValidateAddress {
            - address : String
            - isScript : boolean
            - isvalid : boolean
            - iswitness : boolean
            - scriptPubKey : String
            - witness_program : String
            - witness_version : int
            + getAddress()
            + getScriptPubKey()
            + getWitness_program()
            + getWitness_version()
            + isIsvalid()
            + isIswitness()
            + isScript()
            + setAddress()
            + setIsvalid()
            + setIswitness()
            + setScript()
            + setScriptPubKey()
            + setWitness_program()
            + setWitness_version()
        }
      }
    }
  }
  

  namespace  {
    namespace om.jxust.btcexplorer {
      namespace entity {
        class com.jxust.btcexplorer.entity.WalletInfo {
            - avoid_reuse : boolean
            - balance : float
            - descriptors : boolean
            - format : String
            - hdseedid : String
            - immature_balance : float
            - keypoololdest : int
            - keypoolsize : int
            - keypoolsize_hd_internal : int
            - paytxfee : int
            - private_keys_enabled : boolean
            - scanning : boolean
            - txcount : int
            - unconfirmed_balance : float
            - walletname : String
            - walletversion : int
            + getBalance()
            + getFormat()
            + getHdseedid()
            + getImmature_balance()
            + getKeypoololdest()
            + getKeypoolsize()
            + getKeypoolsize_hd_internal()
            + getPaytxfee()
            + getResult()
            + getTxcount()
            + getUnconfirmed_balance()
            + getWalletname()
            + getWalletversion()
            + isAvoid_reuse()
            + isDescriptors()
            + isPrivate_keys_enabled()
            + isScanning()
            + setAvoid_reuse()
            + setBalance()
            + setDescriptors()
            + setFormat()
            + setHdseedid()
            + setImmature_balance()
            + setKeypoololdest()
            + setKeypoolsize()
            + setKeypoolsize_hd_internal()
            + setPaytxfee()
            + setPrivate_keys_enabled()
            + setResult()
            + setScanning()
            + setTxcount()
            + setUnconfirmed_balance()
            + setWalletname()
            + setWalletversion()
            + toString()
        }
      }
    }
  }
  

  com.jxust.btcexplorer.entity.BaseEntity o-- T : result
  com.jxust.btcexplorer.entity.BlockChainInfo o-- com.jxust.btcexplorer.entity.Softforks : softforks
  com.jxust.btcexplorer.entity.BlockInfo o-- com.jxust.btcexplorer.entity.Block : result
  com.jxust.btcexplorer.entity.Softforks o-- com.jxust.btcexplorer.entity.Bip : bip34
  com.jxust.btcexplorer.entity.Softforks o-- com.jxust.btcexplorer.entity.Bip : bip65
  com.jxust.btcexplorer.entity.Softforks o-- com.jxust.btcexplorer.entity.Bip : bip66
  com.jxust.btcexplorer.entity.Softforks o-- com.jxust.btcexplorer.entity.Bip : csv
  com.jxust.btcexplorer.entity.Softforks o-- com.jxust.btcexplorer.entity.Bip : segwit
  com.jxust.btcexplorer.entity.Softforks o-- com.jxust.btcexplorer.entity.TapRoot : taproot
  com.jxust.btcexplorer.entity.TapRoot o-- com.jxust.btcexplorer.entity.BipDetail : bip9
  com.jxust.btcexplorer.entity.WalletInfo o-- com.jxust.btcexplorer.entity.WalletInfo : result


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
